#!/usr/bin/env bash

#
# Copyright 2017 The Tsinghua University
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if [ -z "${STARGATE_HOME}" ]; then
  export STARGATE_HOME="$(cd "`dirname "$0"`"/..; pwd)"
fi

MAX_HEAP_SIZE=4096m
INII_HEAP_SIZE=4096m

NATIVE_LIB_PATH=$STARGATE_HOME/lib_managed/native
DEPS_JAR_PATH=$STARGATE_HOME/lib_managed/jar/dependency/*
STARGATE_JAR_PATH=$STARGATE_HOME/lib_managed/jar/*
STARGATE_ASSEMBLY_JAR_PATH=$STARGATE_HOME/lib_managed/jar/assembly/*
STARGATE_CONF_PATH=$STARGATE_HOME/conf
ALL_PATH=$DEPS_JAR_PATH:$STARGATE_JAR_PATH:$STARGATE_CONF_PATH

KMEANS_LIB_PATH=$STARGATE_HOME/core/src/main/native/out

MAIN_CLASS=""
SPARK_MASTER=""

if [ $1 = loopback ]
then
    MAIN_CLASS=tsinghua.stargate.examples.Loopback
elif [ $1 = spark-local-loopback ]
then
    SPARK_MASTER=local
    MAIN_CLASS=tsinghua.stargate.examples.spark.Loopback
elif [ $1 = spark-yarn-loopback ]
then
    SPARK_MASTER=yarn
    LABEL=fpga-loopback
    MAIN_CLASS=tsinghua.stargate.examples.spark.Loopback
elif [ $1 = imageCaption ]
then
    MAIN_CLASS=tsinghua.stargate.examples.ImageCaption
elif [ $1 = spark-local-imageCaption ]
then
    SPARK_MASTER=local
    MAIN_CLASS=tsinghua.stargate.examples.spark.ImageCaption
elif [ $1 = spark-yarn-imageCaption ]
then
    SPARK_MASTER=yarn
    LABEL=fpga-imagecaption
    MAIN_CLASS=tsinghua.stargate.examples.spark.ImageCaption
elif [ $1 = kmeans ]
then
    MAIN_CLASS=tsinghua.stargate.examples.KMeans
elif [ $1 = kmeansTest ]
then MAIN_CLASS=tsinghua.stargate.examples.KMeansOld
elif [ $1 = spark-local-kmeans ]
then
    SPARK_MASTER=local
    MAIN_CLASS=tsinghua.stargate.examples.spark.KMeans
elif [ $1 = spark-yarn-kmeans ]
then
    SPARK_MASTER=yarn
    LABEL=fpga-kmeans
    MAIN_CLASS=tsinghua.stargate.examples.spark.KMeans
fi

COMMAND=""
if [[ $1 == *spark* ]]
then
    COMMAND="spark-submit --class $MAIN_CLASS \
            --master $SPARK_MASTER \
            --queue fpga \
            --conf "spark.yarn.executor.nodeLabelExpression=$LABEL" \
            $STARGATE_ASSEMBLY_JAR_PATH"
elif [[ $1 == *kmeans* ]]
then
    COMMAND="java -Djava.library.path=$KMEANS_LIB_PATH -Xss2m -cp $ALL_PATH \
     -Xmx$MAX_HEAP_SIZE -Xms$INII_HEAP_SIZE $MAIN_CLASS"
else
     COMMAND="java -Djava.library.path=$NATIVE_LIB_PATH -cp $ALL_PATH \
     -Xmx$MAX_HEAP_SIZE -Xms$INII_HEAP_SIZE $MAIN_CLASS"
fi

exec $COMMAND
